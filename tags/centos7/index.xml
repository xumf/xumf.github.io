<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centos7 on 小蜜蜂</title>
    <link>https://xumf.github.io/tags/centos7/</link>
    <description>Recent content in Centos7 on 小蜜蜂</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2018  xumf.net&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 03 May 2018 20:54:29 +0800</lastBuildDate>
    
	<atom:link href="https://xumf.github.io/tags/centos7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker离线安装</title>
      <link>https://xumf.github.io/blog/docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/</link>
      <pubDate>Thu, 03 May 2018 20:54:29 +0800</pubDate>
      
      <guid>https://xumf.github.io/blog/docker%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85/</guid>
      <description> 安装docker与docker-compose  本文主要解决在centos7服务器无法访问外网的时候安装docker的问题
 在可访问外网的电脑上下载docker所需文件  docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm  将下载的两个文件传送到centos7服务器上 scp docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm &amp;lt;用户名&amp;gt;@&amp;lt;服务器ip或者域名&amp;gt;:&amp;lt;存放路径&amp;gt; scp docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm &amp;lt;用户名&amp;gt;@&amp;lt;服务器ip或者域名&amp;gt;:&amp;lt;存放路径&amp;gt;  使用yum install先后执行两个文件 # 依次执行 yum install docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm yum install docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm  启动Docker服务 sudo systemctl start docker  去掉执行docker必须sudo  添加docker用户组$ sudo groupadd docker 将系统用户加入$ sudo gpasswd -a ${USER} docke  docker-compose安装  在能连接外网的linux下下载docker-compose  sudo curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose   用scp将docker-compose文件传送到无法连接外网的linux上  scp /usr/local/bin/docker-compose &amp;lt;user&amp;gt;@&amp;lt;ip&amp;gt;:/home/&amp;lt;user&amp;gt;/bin/   ssh进入无法连接外网的服务器  ssh &amp;lt;user&amp;gt;@&amp;lt;ip&amp;gt;   给用户添加执行权限  sudo chmod +x /usr/local/bin/docker-compose   测试是否成功  $ docker-compose --version # 成功允许会有版本信息输出  </description>
    </item>
    
  </channel>
</rss>