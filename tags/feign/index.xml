<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feign on 小蜜蜂</title>
    <link>https://xumf.net/tags/feign/</link>
    <description>Recent content in Feign on 小蜜蜂</description>
    <generator>Hugo 0.125.1</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2018  xumf.net&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 15 Jun 2018 15:43:54 +0800</lastBuildDate>
    <atom:link href="https://xumf.net/tags/feign/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Feign</title>
      <link>https://xumf.net/blog/feign/</link>
      <pubDate>Fri, 15 Jun 2018 15:43:54 +0800</pubDate>
      <guid>https://xumf.net/blog/feign/</guid>
      <description>什么是Feign Feign 是 Netflix 开源的声明式 HTTP 客户端，用于简化 RESTful 服务的调用 通过定义接口和注解，Feign 可以自动生成HTTP请求的实现 特点 声明式 API ：通过接口注解定义 HTTP 请求，无需手动编写 HTTP 客户端代码 集成 Ribbon ：默认集成 Ribbon ，支持客户端负载均衡 集成 Hystrix ：支持熔断和降级机制 可扩展性：支持自定义编码器、解码器和拦截器 工作原理 （1）接口定义 使用 @FeignClient 注解定义 Feign 客户端接口 通过方法注解（如 @GetMapping、@PostMapping）定义 HTTP 请求 （2）动态代理 Feign 通过动态代理技术生成接口的实现类 在运行时，Feign 会将方法调用转换为 Http 请求 （3）请求处理 Feign 根据接口定义生成 HTTP 请求，并通过 Ribbon 进行负载均衡 请求结果通过解码器为 Java 对象 （4）集成 Ribbon 和 Hystrix Feign 默认集成了 Ribbon，支持客户端负载均衡 通过配置可以启用 Hystrix，实现熔断和降级 Feign 的配置 （1）基本配置 使用 @FeignClient 注解定义 Feign 客户端： @FeignClient(name = &amp;#34;service-name&amp;#34;, url = &amp;#34;http://localhost:8080&amp;#34;) public interface MyFeignClient { @GetMapping(&amp;#34;/endpoint&amp;#34;) String getResponse(); } （2）负载均衡 * Feign 默认集成了 Ribbon，无需额外配置 * 可以通过配置文件自定义 Ribbon 的负载均衡策略： service-name: ribbon: NFLoadBalancerRuleClassName: com.</description>
    </item>
  </channel>
</rss>
